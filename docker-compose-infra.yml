version: '3.8'
services:
  rabbitmq:
    image: rabbitmq:3.13.7-management-prom
    build:
      context: docker
      dockerfile: RabbitMQ.Dockerfile
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

  prometheus:
    image: prom/prometheus:v2.34.0
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/  # Скопируем конфигурацию Prometheus
      - prometheus-data:/prometheus  # Данные Prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus/'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"  # Порт Prometheus

  grafana:
    image: grafana/grafana:9.5.21-plugins
    build:
      context: docker
      dockerfile: grafana.Dockerfile
    container_name: grafana
    ports:
      - "3000:3000"  # Порт Grafana
    volumes:
      - grafana-data:/var/lib/grafana  # Хранение данных Grafana
      - ./dashboards:/etc/grafana/provisioning/dashboards  # Импорт дашбордов
      - ./datasources:/etc/grafana/provisioning/datasources  # Настройки Data Sources

  haproxy:
    image: haproxy:2.7
    container_name: haproxy
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    ports:
      - "7000:7000"
      - "8000:8000"

  influxdb:
    image: influxdb:1.8.10
    container_name: influxdb
    volumes:
      - influxdb-data:/var/lib/influxdb

  kafka:
    image: docker.io/bitnami/kafka:3.9.0
    container_name: kafka
    ports:
      - "9092:9092"
    volumes:
      - "kafka-data:/bitnami"
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: kafka-zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_ZOOKEEPER: kafka-zookeeper:2181
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "8080"]
      timeout: 20s
      retries: 10

  kafka-zookeeper:
    image: zookeeper:3.9.2
    container_name: kafka-zookeeper
    volumes:
      - kafka-zookeeper-data:/data

volumes:
  prometheus-data:
  grafana-data:
  influxdb-data:
  kafka-data:
  kafka-zookeeper-data: