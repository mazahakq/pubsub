version: '3.8'
services:
  rabbitmq:
    image: rabbitmq:3.13.7-management-prom
    build:
      context: .
      dockerfile: RabbitMQ.Dockerfile
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

  prometheus:
    image: prom/prometheus:v2.34.0
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/  # Скопируем конфигурацию Prometheus
      - prometheus-data:/prometheus  # Данные Prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus/'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"  # Порт Prometheus

  grafana:
    image: grafana/grafana:9.5.21-plugins
    build:
      context: .
      dockerfile: grafana.Dockerfile
    container_name: grafana
    ports:
      - "3000:3000"  # Порт Grafana
    volumes:
      - grafana-data:/var/lib/grafana  # Хранение данных Grafana
      - ./dashboards:/etc/grafana/provisioning/dashboards  # Импорт дашбордов
      - ./datasources:/etc/grafana/provisioning/datasources  # Настройки Data Sources

  haproxy:
    image: haproxy:2.7
    container_name: haproxy
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    ports:
      - "7000:7000"

  influxdb:
    image: influxdb:1.8.10
    container_name: influxdb
    volumes:
      - influxdb-data:/var/lib/influxdb

  app_a:
    image: apppubsub:master
    build: .
    container_name: app_a
    entrypoint: ["python", "app_a.py"]
    environment:
      - RABBITMQ_HOST=rabbitmq
    deploy:
      replicas: 1
    depends_on:
      - rabbitmq
    volumes:
      - ./code:/code

  app_b:
    image: apppubsub:master
    build: .
    container_name: app_b
    entrypoint: ["python", "app_b.py"]
    profiles:
      - python_b
    environment:
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      - rabbitmq
    deploy:
      replicas: 1
    volumes:
      - ./code:/code

  source_app:
    image: apppubsub:master
    build: .
    container_name: source_app
    entrypoint: ["python", "source_app.py"]
    profiles:
      - test
    environment:
      - SERVER_ADDRESS=http://haproxy:8000
      - RATE_PER_SECOND=100
    deploy:
      replicas: 1
    depends_on:
      - app_a
      - haproxy
    volumes:
      - ./code:/code

  source_app_k6:
    build:
      context: .
      dockerfile: k6.Dockerfile
    container_name: source_app_k6
    environment:
      - SERVER_ADDRESS=http://haproxy:8000
    profiles:
      - test_k6
    depends_on:
      - app_a
      - haproxy
    command: run --out influxdb=http://influxdb:8086/k6db /usr/src/app/source_app.js 
    volumes:
      - ./code:/usr/src/app

volumes:
  prometheus-data:
  grafana-data:
  influxdb-data: